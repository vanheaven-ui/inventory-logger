name: Android Production Build

on:
  push:
    branches:
      - main # Or 'master', or any branch you want to trigger builds on
  workflow_dispatch: # Allows you to trigger the workflow manually from GitHub Actions UI

jobs:
  build-android:
    runs-on: ubuntu-latest # GitHub-hosted runner with Android SDK, Node.js, Java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Use a Node.js version compatible with your Expo SDK

      - name: Install dependencies
        run: npm install # Or 'yarn install' if you use Yarn

      - name: Set up Java Development Kit
        uses: actions/setup-java@v4
        with:
          distribution: "temurin" # Or 'zulu', 'oracle'
          java-version: "17" # Java 17 is generally recommended for recent Android/RN

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2 # Action to ensure Android SDK is available
        with:
          api-level: 35 # Match your targetSdkVersion
          build-tools: 35.0.0 # Match your buildToolsVersion
          cmake: 3.22.1 # Optional, if you use native code that needs CMake

      - name: Run expo prebuild
        run: npx expo prebuild --no-install --clean # --no-install prevents npm/yarn install in generated native project

      - name: Create keystore file
        run: |
          echo "$ANDROID_SIGNING_KEYSTORE" | base64 --decode > android/app/my-upload-key.keystore
        env:
          ANDROID_SIGNING_KEYSTORE: ${{ secrets.ANDROID_SIGNING_KEYSTORE }}

      - name: Create `gradle.properties` for signing
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_STORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties

      - name: Change package name in build.gradle (if different from default)
        # This step is crucial if your app.json package is different from 'com.yourapp'
        # Look at your android/app/build.gradle after prebuild to see the default,
        # and compare it to what's in app.json. If they differ, uncomment and adjust.
        # Otherwise, you might face package name issues during build.
        # Example: Replace 'com.vanheaven.inventorylogger'
        run: |
          sed -i "s|namespace = 'com.vanheaven.inventorylogger'|namespace = 'com.vanheaven.inventorylogger'|g" android/app/build.gradle
          sed -i "s|applicationId = 'com.vanheaven.inventorylogger'|applicationId = 'com.vanheaven.inventorylogger'|g" android/app/build.gradle
        # You should verify what `app.json` generates for `namespace` and `applicationId`
        # by running `npx expo prebuild` locally and checking `android/app/build.gradle`.
        # Usually, they derive directly from `expo.android.package`. This step might not be needed.

      - name: Build Android Release APK
        run: cd android && ./gradlew assembleRelease # For AAB use: ./gradlew bundleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk # Adjust path for AAB: android/app/build/outputs/bundle/release/app-release.aab

      - name: Clean up keystore
        run: rm android/app/my-upload-key.keystore # Clean up sensitive file
        if: always() # Always run this step, even if previous steps fail
